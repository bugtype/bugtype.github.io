<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bugtype&#39;s Devlog</title>
    <link>https://bugtype.github.io/</link>
    <description>Recent content on Bugtype&#39;s Devlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 30 Apr 2022 10:20:30 +0900</lastBuildDate><atom:link href="https://bugtype.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ARC(Automatic Reference Counting)란?</title>
      <link>https://bugtype.github.io/post/arc/</link>
      <pubDate>Sat, 30 Apr 2022 10:20:30 +0900</pubDate>
      
      <guid>https://bugtype.github.io/post/arc/</guid>
      <description>설명   Swift에서 자동으로 처리 해준다.
  ARC는 GC (Garbage Collector)와는 다르게 런타임이 아닌 컴파일 단에서 처리된다.
  GC는 런타임에 메모리를 검사하기 때문에 앱 퍼포먼스에 악영향을 준다.
  Retatin release 를 안해도 된다.
  어떠한 클래스 A 인스턴스가 있다.
  A는 B와 C에 참조되어 있다. ( Reference Couting이 2가 된다.)
  관련 링크  https://soulpark.wordpress.com/2013/04/03/ios-automatic-reference-counting-arc/  </description>
    </item>
    
    <item>
      <title>N사 만화 스크린샷 뚫기</title>
      <link>https://bugtype.github.io/post/n%EC%82%AC-%EB%A7%8C%ED%99%94-%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7-%EB%9A%AB%EA%B8%B0/</link>
      <pubDate>Mon, 01 Oct 2018 13:20:30 +0900</pubDate>
      
      <guid>https://bugtype.github.io/post/n%EC%82%AC-%EB%A7%8C%ED%99%94-%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7-%EB%9A%AB%EA%B8%B0/</guid>
      <description>설명 N사의 만화뷰어는 스크린샷을 찍지 못하게 막아두었다.
어떤 원리로 막는지 궁금해서 여러가지 시도를 했다.
어디까지는 호기심으로 한 것으로 코드는 공개하지 않습니다.
역시 N사가 다른 곳에 비해 빨리 보완한다.
분석   print screenshot을 찍으면 clipboard에 저장되는데 저장되는 순간 clipboard에서 지운다.
  print key 감지 한다
  다른 스크린샷 활용시 opengl 감지시 해당 영역을 사진을 찍을 수 없다고 표시
  결제는 웹(js, html)으로 처리한다
  만화 이미지는 openGL로 그린다.</description>
    </item>
    
  </channel>
</rss>
