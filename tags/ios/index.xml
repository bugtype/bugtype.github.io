<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>iOS on Bugtype&#39;s Devlog</title>
    <link>https://bugtype.github.io/tags/ios/</link>
    <description>Recent content in iOS on Bugtype&#39;s Devlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 30 Apr 2022 10:20:30 +0900</lastBuildDate><atom:link href="https://bugtype.github.io/tags/ios/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ARC(Automatic Reference Counting)란?</title>
      <link>https://bugtype.github.io/post/arc/</link>
      <pubDate>Sat, 30 Apr 2022 10:20:30 +0900</pubDate>
      
      <guid>https://bugtype.github.io/post/arc/</guid>
      <description>설명   Swift에서 자동으로 처리 해준다.
  ARC는 GC (Garbage Collector)와는 다르게 런타임이 아닌 컴파일 단에서 처리된다.
  GC는 런타임에 메모리를 검사하기 때문에 앱 퍼포먼스에 악영향을 준다.
  Retatin release 를 안해도 된다.
  어떠한 클래스 A 인스턴스가 있다.
  A는 B와 C에 참조되어 있다. ( Reference Couting이 2가 된다.)
  관련 링크  https://soulpark.wordpress.com/2013/04/03/ios-automatic-reference-counting-arc/  </description>
    </item>
    
  </channel>
</rss>
